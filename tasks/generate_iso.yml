---  
- name: Create the extraction directory
  file:
    path: "{{ target_dir }}/iso"
    state: directory

- name: Extract the ISO
  shell:
    cmd: "7z -y x {{ target_dir }}/debian-server-{{ iso_arch }}.iso -o{{ target_dir }}/iso"

# - name: Add preseed file to initrd directory
#   shell:
#     cmd: "cp {{ target_dir }}/preseed.cfg {{ target_dir }}/iso/"

- name: Add preseed file to initrd 1/5
  shell:
    cmd: "chmod +w -R {{ target_dir }}/iso/install.amd/"

- name: Add preseed file to initrd 2/5
  shell:
    cmd: "gunzip {{ target_dir }}/iso/install.amd/initrd.gz"

- name: Add preseed file to initrd 3/5
  shell:
    cmd: "echo {{ target_dir }}/preseed.cfg | cpio -H newc -o -A -F  {{ target_dir }}/iso/install.amd/initrd"

- name: Add preseed file to initrd 4/5
  shell:
    cmd: "gzip {{ target_dir }}/iso/install.amd/initrd"

- name: Add preseed file to initrd 5/5 
  shell: 
    cmd: "chmod -w -R {{ target_dir }}/iso/install.amd/"

- name: Update MD5 Hash 1/3 
  shell: 
    cmd: "chmod +w {{ target_dir }}/iso/md5sum.txt"

- name: Update MD5 Hash 2/3 
  shell: 
    cmd: "find -follow -type f ! -name {{ target_dir }}/iso/md5sum.txt -print0 | xargs -0 md5sum > {{ target_dir }}/iso/md5sum.txt"

- name: Update MD5 Hash 3/3  
  shell: 
    cmd: "chmod -w {{ target_dir }}/iso/md5sum.txt"

- name: Save MBR
  shell: 
    cmd: "dd if=\"{{ target_dir }}/debian-server-{{ iso_arch }}.iso\" bs=1 count=432 of=\"{{ target_dir }}/mbr_template\""

- name: Repack the ISO (amd64)
  shell:
    cmd: "cd {{ target_dir }}/iso && xorriso -as mkisofs -r -V debian-autoinstall_{{ iso_arch }} -J -J -joliet-long -cache-inodes -isohybrid-mbr {{ target_dir }}/mbr_template -b isolinux/isolinux.bin -c isolinux/boot.cat -boot-load-size 4 -boot-info-table -no-emul-boot -eltorito-alt-boot -e boot/grub/efi.img -no-emul-boot -isohybrid-gpt-basdat -isohybrid-apm-hfsplus -o {{ target_dir }}/debian_autoinstall_{{ iso_arch }}.iso ."
  when: iso_arch == 'amd64'

# - name: Repack the ISO (arm64)
#   shell:
#     cmd: "cd {{ target_dir }}/iso && xorriso -as mkisofs -r -V debian-autoinstall_{{ iso_arch }} -J -J -joliet-long -cache-inodes -isohybrid-mbr {{ target_dir }}/mbr_template -b isolinux/isolinux.bin -c isolinux/boot.cat -boot-load-size 4 -boot-info-table -no-emul-boot -eltorito-alt-boot -e boot/grub/efi.img -no-emul-boot -isohybrid-gpt-basdat -isohybrid-apm-hfsplus -o {{ target_dir }}/debian_autoinstall_{{ iso_arch }}.iso ."
#   when: iso_arch == 'arm64'

- name: Make {{ target_dir }} writable
  shell:
    cmd: "chmod +w -R {{ target_dir }}/iso/"

# - name: Clean up
#   file:
#     path: "{{ item }}"
#     state: absent
#   with_items: 
#     - "{{ target_dir }}/iso"

- name: Done!
  debug:
    msg: "Done! The ISO file has been generated: {{target_dir}}/debian_autoinstall_{{ iso_arch }}.iso"
    
  
